% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hiqr.R
\name{hiqr}
\alias{hiqr}
\title{Main function for the High dimensional Quadratic Regression (HiQR)}
\usage{
hiqr(
  X,
  Y,
  type = 1,
  lambda = NULL,
  lambda2 = NULL,
  nlambda = 50,
  lambda.min.ratio = 0.25,
  nalpha = 5,
  alpha.min.ratio = 0.1,
  err_abs = 1e-04,
  err_rel = 0.001,
  maxIter = 200,
  rho = 5,
  rho_vary = 0
)
}
\arguments{
\item{\code{X}, }{covariates data matrix of dimension \eqn{n \times p}.}

\item{\code{Y}, }{response variable with length \eqn{n}.}

\item{\code{type}, }{The penalty to use: 
1(Default)--\eqn{\ell_1} penalty(LASSO);
2--squared \eqn{\ell_2} penalty(Ridge Regression);
5--nuclear norm penalty(Reduced Rank Regression);
12--\eqn{\ell_1+\ell_\infty} penalties;
13-\eqn{\ell_1+\ell_2} penalties;
14--\eqn{\ell_1+\ell_1/\ell_\infty} penalties;
15--\eqn{\ell_1+}nuclear norm penalties.}

\item{\code{lambda}, }{user supplied tuning parameter for the first penalty; Default is NULL and the program compute its own
sequence based on \code{nlambda} and \code{lambda.min.ratio}.}

\item{\code{lambda2}, }{user supplied tuning parameter for the second penalty(if exists) which has the same length as \code{lambda};
Default is NULL and the program compute its own sequence based on \code{nlambda}, \code{lambda.min.ratio}, \code{nalpha} and \code{alpha.min.ratio}.}

\item{\code{nlambda}, }{the length of the tuning parameter sequence which is available when \code{lambda} is NULL. Default is 50.}

\item{\code{lambda.min.ratio}, }{smallest value for lambda, as a fraction of lambda.max which is available when \code{lambda} is NULL. Default is 0.25.}

\item{\code{nalpha}, }{the length of the second parameter to control the magnitude of penalties on individual covariates versus interaction terms.
which is available when \code{lambda} is NULL. Default is 5.}

\item{\code{alpha.min.ratio}, }{smallest value for \code{alpha}. Default is 0.1.}

\item{\code{err_abs}, \code{err_rel}, }{the absolute and relative precision used to stop the convergence. Default are 1e-4 and 1e-3.}

\item{\code{maxIter}, }{Maximum number of iterations. Default is 200.}

\item{\code{rho}, }{step parameter for ADMM. Default is 5.}

\item{\code{rho_vary}, }{whether varying penalty parameter \eqn{\rho} for ADMM. Default is 0 (no varying).}
}
\value{
A list with components
\item{Omega}{a list with length \code{nlambda}(for single penalty) or \code{nlambda}*\code{nalpha}(for two penalties) of sparse \eqn{(p+1) \times (p+1)} matrices. 
For two penalties, the element of the list is corresponding to (\code{lambda1}[k],\code{lambda2}[k]).}
\item{\code{lambda1}}{the used \code{lambda1} for the solution path.}
\item{\code{lambda2}}{the used \code{lambda2} for the solution path.}
\item{niter}{the number of iterations for each element which is a \code{nlambda1} vector(for single penalty) or a \code{nlambda1}*\code{nlambda2} vector (for two penalties).}
}
\description{
Main function for the High dimensional Quadratic Regression (HiQR)
}
\examples{
rm(list = ls())
library('HiQR')
library('glmnet')
set.seed(99)
p=100
n=200;
Omega=matrix(0,nrow=p,ncol=p);
Omega[6,6]=1
Omega[1,6]=2;Omega[6,10]=2;Omega=(Omega+t(Omega))/2;
beta<-rep(0,p);beta[c(1,6,10)]=1;
X=matrix(rnorm(n*p),nrow =n);
Y=as.vector(diag(X\%*\%Omega\%*\%t(X))+X\%*\%beta+rnorm(n));
obj2<-hiqr(X,Y,type=1) ##LASSO
obj2<-hiqr(X,Y,type=2) ## Ridge Regression 
obj5<-hiqr(X,Y,type=5)## Reduced Rank Regression
obj12<-hiqr(X,Y,type=12) ## $\ell_1+\ell_2$ norm
obj13<-hiqr(X,Y,type=13) ## $\ell_1+\ell_\infty$ norm
obj14<-hiqr(X,Y,type=14) ## $\ell_1+\ell_1/\ell_\infty$ norm
obj15<-hiqr(X,Y,type=15) ## $\ell_1+\ell_*$ norm: 
}
