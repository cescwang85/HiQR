% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hiqr.R
\name{hiqr}
\alias{hiqr}
\title{Main function for the High dimensional Quadratic Regression (HiQR)}
\usage{
hiqr(
  X,
  Y,
  type = NULL,
  lambda1 = NULL,
  nlambda1 = 50,
  lambda.min.ratio1 = 0.1,
  lambda2 = NULL,
  nlambda2 = 50,
  lambda.min.ratio2 = 0.1,
  err_abs = 1e-04,
  err_rel = 0.001,
  maxIter = 200,
  rho = 5
)
}
\arguments{
\item{\code{X}, }{covariates data matrix of dimension \eqn{n \times p}.}

\item{\code{Y}, }{response variable with length \eqn{n}.}

\item{\code{type}, }{The penalty to use: 
1(Default)--\eqn{\ell_1} penalty(LASSO);
2--squared \eqn{\ell_2} penalty(Ridge Regression);
5--nuclear norm penalty(Reduced Rank Regression);
12--\eqn{\ell_1+\ell_\infty} penalties;
13-\eqn{\ell_1+\ell_2} penalties;
14--\eqn{\ell_1+\ell_1/\ell_\infty} penalties;
15--\eqn{\ell_1+}nuclear norm penalties.}

\item{\code{lambda1}, }{user supplied tuning parameter for the first penalty; Default is NULL and the program compute its own
sequence based on \code{nlambda1}.}

\item{\code{nlambda1}, }{the length of the tuning parameter sequence which is available when \code{lambda1} is NULL. Default is 50.}

\item{\code{lambda.min.ratio1}, }{smallest value for lambda, as a fraction of lambda.max which is available when \code{lambda1} is NULL. Default is 0.1.}

\item{\code{lambda2}, }{user supplied tuning parameter for the second penalty(if exists); Default is NULL and the program compute its own
sequence based on \code{nlambda1}.}

\item{\code{nlambda2}, }{the length of the tuning parameter sequence which is available when \code{lambda2} is NULL. Default is 50.}

\item{\code{lambda.min.ratio2}, }{smallest value for lambda, as a fraction of lambda.max which is available when \code{lambda2} is NULL. Default is 0.1.}

\item{\code{err_abs}, \code{err_rel}, }{the absolute and relative precision used to stop the convergence. Default are 1e-4 and 1e-3.}

\item{\code{maxIter}, }{Maximum number of iterations. Default is 200.}

\item{\code{rho}, }{step parameter for ADMM. Default is 5.}
}
\value{
A list with components
\item{Omega}{a list with length \code{nlambda1}(for single penalty) or \code{nlambda1}*\code{nlambda2}(for two penalties) of sparse \eqn{(p+1) \times (p+1)} matrices. 
For two penalties, the \eqn{(i-1)}*\code{nlambda2}\eqn{+j} element of the list is for (\code{lambda1}[i],\code{lambda2}[j]}).
\item{lambda1}{the used lambda1 for the solution path.}
\item{lambda2}{the used lambda2 for the solution path.}
\item{niter}{the number of iterations for each element which is a \code{nlambda1} vector(for single penalty) or a \code{nlambda1}*\code{nlambda2} matrix (for two penalties).}
}
\description{
Main function for the High dimensional Quadratic Regression (HiQR)
}
\examples{
rm(list = ls())
library('PIE')
library('glmnet')
set.seed(99)
p=100
n=200;
Omega=matrix(0,nrow=p,ncol=p);
Omega[6,6]=1
Omega[1,6]=2;Omega[6,10]=2;Omega=(Omega+t(Omega))/2;
beta<-rep(0,p);beta[c(1,6,10)]=1;
X=matrix(rnorm(n*p),nrow =n);
Y=as.vector(diag(X\%*\%Omega\%*\%t(X))+X\%*\%beta+rnorm(n));
yOme<-PIE(X,Y)
hbeta<-as.vector(coef(cv.glmnet(X,Y,nfolds =5),s="lambda.min"))[-1];  
rOme<-PIE(X,Y-X\%*\%hbeta)
yOme[1:10,1:10]
rOme[1:10,1:10]
}
