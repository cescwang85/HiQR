levelplot(t(A1), xlab="lambda", ylab="alpha",col.regions = gray(100:0/100))
lambda<-exp(seq(from=0,to=log(0.25),length.out=50));
alpha<-seq(from=0.1,to=1,length.out=nalpha);
lambdafull<-rep(lambda,each=length(alpha));
alphafull<-rep(alpha,times=length(lambda));
lambda1_new=lambdafull*alphafull
sd(lambda1_new/lambda1)
lambda<-exp(seq(from=0,to=log(0.5),length.out=50));
alpha<-seq(from=0.1,to=1,length.out=nalpha);
lambdafull<-rep(lambda,each=length(alpha));
alphafull<-rep(alpha,times=length(lambda));
lambda1_new=lambdafull*alphafull
sd(lambda1_new/lambda1)
mean(lambda1/lambda1_new)
lam1=mean(lambda1/lambda1_new)*lambda
obj0=hiqr(X0,Y,lambda =lam1,type=1)
re0<-rep(0,50)
for (k in 1:length(lam1))
{B=obj0$Omega[[k]];
re0[k]=csi(Omega,B)}
t(re0)
A1[,50]
##simulation for all-pairs lasso
rm(list=ls())
library(HiQR)
setwd('~/Dropbox/Share/HQR_ADMM/test')
set.seed(99)
library('glmnet')
library('Matrix')
library('MASS')
ttime<-function(obj)
{t1<-proc.time();
obj
t2<-as.vector(proc.time()-t1);
return(sum(t2[1:2]))}
n=500
## Generate data
p=100
## Parameters
Sigma=toeplitz(0.5^(0:(p-1)))
Omega3<-matrix(0,nrow=p+1,ncol=p+1)
Omega3[2,6]=3;Omega3[6,6]=-2.5;Omega3[6,11]=4
Omega3=(Omega3+t(Omega3))/2;
Omega2=Omega3;
Omega2[1,6]=-1;Omega2[6,1]=-1;
Omega1=Omega2;
Omega1[1,2]=1;Omega1[2,1]=1
Omega1[1,11]=1;Omega1[11,1]=1
Omega3[c(1,2,6,11),c(1,2,6,11)] ##check matrix
X0<-mvrnorm(n,rep(0,p),Sigma)
X<-cbind(1,X0)
Y1<-diag(X%*%Omega1%*%t(X))+rnorm(n);
Y2<-diag(X%*%Omega2%*%t(X))+rnorm(n);
Y3<-diag(X%*%Omega3%*%t(X))+rnorm(n);
##
Y=Y1
nalpha=50
runtime<-rep(0,7);
## type=1 (all-pairs LASSO)
runtime[1]=ttime({obj1=hiqr(X0,Y,type=1)})
## type=2 (Ridge regression)
runtime[2]=ttime({obj2=hiqr(X0,Y,type=2)})
## type=5 (Reduced Rank)
runtime[3]=ttime({obj5=hiqr(X0,Y,type=5)})
## type=12 (l1+l_inf)
runtime[4]=ttime({obj12=hiqr(X0,Y,type=12,nalpha=nalpha)})
## type=13 (l1+l2)
runtime[5]=ttime({obj13=hiqr(X0,Y,type=13,nalpha=nalpha)})
## type=14 (l1+l1/l_inf)
runtime[6]=ttime({obj14=hiqr(X0,Y,type=14,nalpha=nalpha)})
## type=15 (l1+nuclear norm)
runtime[7]=ttime({obj15=hiqr(X0,Y,type=15,nalpha=nalpha)})
runtime
obj=obj13;
Omega=Omega1
mean(obj$niter)
lambda1<-as.vector(obj$lambda1)
lambda1<-as.vector(obj$lambda1)
nlambda<-length(lambda1)
re<-rep(0,nlambda)
for (k in 1:nlambda)
{A=obj$Omega[[k]];
re[k]=csi(Omega,A)}
A1=matrix(re,ncol=nalpha,byrow=TRUE)
library("lattice")
lambda<-exp(seq(from=0,to=log(0.5),length.out=50));
alpha<-seq(from=0.1,to=1,length.out=nalpha);
grid <- expand.grid(x=lambda, y=alpha)
grid$z <- re
levelplot(z ~ x * y, grid, xlab="lambda", ylab="alpha",col.regions = gray(100:0/100))
lambdafull<-rep(lambda,each=length(alpha));
alphafull<-rep(alpha,times=length(lambda));
lambda1_new=lambdafull*alphafull
lam1=mean(lambda1/lambda1_new)*lambda
obj0=hiqr(X0,Y,lambda =lam1,type=1)
re0<-rep(0,50)
for (k in 1:length(lam1))
{B=obj0$Omega[[k]];
re0[k]=csi(Omega,B)}
round(t(re0),2)
A1[,50]
round(t(re0),2)
round(A1[,50],2)
obj=obj12;
Omega=Omega1
mean(obj$niter)
lambda1<-as.vector(obj$lambda1)
nlambda<-length(lambda1)
re<-rep(0,nlambda)
for (k in 1:nlambda)
{A=obj$Omega[[k]];
re[k]=csi(Omega,A)}
A1=matrix(re,ncol=nalpha,byrow=TRUE)
library("lattice")
lambda<-exp(seq(from=0,to=log(0.5),length.out=50));
alpha<-seq(from=0.1,to=1,length.out=nalpha);
grid <- expand.grid(x=lambda, y=alpha)
grid$z <- re
levelplot(z ~ x * y, grid, xlab="lambda", ylab="alpha",col.regions = gray(100:0/100))
lambdafull<-rep(lambda,each=length(alpha));
alphafull<-rep(alpha,times=length(lambda));
lambda1_new=lambdafull*alphafull
lam1=mean(lambda1/lambda1_new)*lambda
obj0=hiqr(X0,Y,lambda =lam1,type=1)
re0<-rep(0,50)
for (k in 1:length(lam1))
{B=obj0$Omega[[k]];
re0[k]=csi(Omega,B)}
round(t(re0),2)
round(A1[,50],2)
obj=obj13;
Omega=Omega1
mean(obj$niter)
lambda1<-as.vector(obj$lambda1)
nlambda<-length(lambda1)
re<-rep(0,nlambda)
for (k in 1:nlambda)
{A=obj$Omega[[k]];
re[k]=csi(Omega,A)}
A1=matrix(re,ncol=nalpha,byrow=TRUE)
library("lattice")
lambda<-exp(seq(from=0,to=log(0.5),length.out=50));
alpha<-seq(from=0.1,to=1,length.out=nalpha);
grid <- expand.grid(x=lambda, y=alpha)
grid$z <- re
levelplot(z ~ x * y, grid, xlab="lambda", ylab="alpha",col.regions = gray(100:0/100))
lambdafull<-rep(lambda,each=length(alpha));
alphafull<-rep(alpha,times=length(lambda));
lambda1_new=lambdafull*alphafull
lam1=mean(lambda1/lambda1_new)*lambda
obj0=hiqr(X0,Y,lambda =lam1,type=1)
re0<-rep(0,50)
for (k in 1:length(lam1))
{B=obj0$Omega[[k]];
re0[k]=csi(Omega,B)}
round(t(re0),2)
round(A1[,50],2)
obj=obj14;
Omega=Omega1
mean(obj$niter)
lambda1<-as.vector(obj$lambda1)
nlambda<-length(lambda1)
re<-rep(0,nlambda)
for (k in 1:nlambda)
{A=obj$Omega[[k]];
re[k]=csi(Omega,A)}
A1=matrix(re,ncol=nalpha,byrow=TRUE)
library("lattice")
lambda<-exp(seq(from=0,to=log(0.5),length.out=50));
alpha<-seq(from=0.1,to=1,length.out=nalpha);
grid <- expand.grid(x=lambda, y=alpha)
grid$z <- re
levelplot(z ~ x * y, grid, xlab="lambda", ylab="alpha",col.regions = gray(100:0/100))
lambdafull<-rep(lambda,each=length(alpha));
alphafull<-rep(alpha,times=length(lambda));
lambda1_new=lambdafull*alphafull
lam1=mean(lambda1/lambda1_new)*lambda
obj0=hiqr(X0,Y,lambda =lam1,type=1)
re0<-rep(0,50)
for (k in 1:length(lam1))
{B=obj0$Omega[[k]];
re0[k]=csi(Omega,B)}
round(t(re0),2)
round(A1[,50],2)
sd(lambda1/lambda1_new)
obj=obj14;
Omega=Omega1
mean(obj$niter)
lambda1<-as.vector(obj$lambda1)
nlambda<-length(lambda1)
re<-rep(0,nlambda)
for (k in 1:nlambda)
{A=obj$Omega[[k]];
re[k]=csi(Omega,A)}
A1=matrix(re,ncol=nalpha,byrow=TRUE)
library("lattice")
lambda<-exp(seq(from=0,to=log(0.25),length.out=50));
alpha<-seq(from=0.1,to=1,length.out=nalpha);
grid <- expand.grid(x=lambda, y=alpha)
grid$z <- re
levelplot(z ~ x * y, grid, xlab="lambda", ylab="alpha",col.regions = gray(100:0/100))
lambdafull<-rep(lambda,each=length(alpha));
alphafull<-rep(alpha,times=length(lambda));
lambda1_new=lambdafull*alphafull
lam1=mean(lambda1/lambda1_new)*lambda
obj0=hiqr(X0,Y,lambda =lam1,type=1)
re0<-rep(0,50)
for (k in 1:length(lam1))
{B=obj0$Omega[[k]];
re0[k]=csi(Omega,B)}
round(t(re0),2)
round(A1[,50],2)
obj=obj15;
Omega=Omega1
mean(obj$niter)
lambda1<-as.vector(obj$lambda1)
nlambda<-length(lambda1)
re<-rep(0,nlambda)
for (k in 1:nlambda)
{A=obj$Omega[[k]];
re[k]=csi(Omega,A)}
A1=matrix(re,ncol=nalpha,byrow=TRUE)
library("lattice")
lambda<-exp(seq(from=0,to=log(0.25),length.out=50));
alpha<-seq(from=0.1,to=1,length.out=nalpha);
grid <- expand.grid(x=lambda, y=alpha)
grid$z <- re
levelplot(z ~ x * y, grid, xlab="lambda", ylab="alpha",col.regions = gray(100:0/100))
lambdafull<-rep(lambda,each=length(alpha));
alphafull<-rep(alpha,times=length(lambda));
lambda1_new=lambdafull*alphafull
lam1=mean(lambda1/lambda1_new)*lambda
obj0=hiqr(X0,Y,lambda =lam1,type=1)
re0<-rep(0,50)
for (k in 1:length(lam1))
{B=obj0$Omega[[k]];
re0[k]=csi(Omega,B)}
round(t(re0),2)
round(A1[,50],2)
runtime
paste(obj,'15')
paste('obj',15,sep='')
##simulation for all-pairs lasso
rm(list=ls())
unlist(paste('obj',15,sep=''))
##simulation for all-pairs lasso
rm(list=ls())
library(HiQR)
setwd('~/Dropbox/Share/HQR_ADMM/test')
set.seed(99)
library('glmnet')
library('Matrix')
library('MASS')
library("lattice")
ttime<-function(obj)
{t1<-proc.time();
obj
t2<-as.vector(proc.time()-t1);
return(sum(t2[1:2]))}
n=500
## Generate data
p=100
## Parameters
Sigma=toeplitz(0.5^(0:(p-1)))
Omega3<-matrix(0,nrow=p+1,ncol=p+1)
Omega3[2,6]=3;Omega3[6,6]=-2.5;Omega3[6,11]=4
Omega3=(Omega3+t(Omega3))/2;
Omega2=Omega3;
Omega2[1,6]=-1;Omega2[6,1]=-1;
Omega1=Omega2;
Omega1[1,2]=1;Omega1[2,1]=1
Omega1[1,11]=1;Omega1[11,1]=1
Omega3[c(1,2,6,11),c(1,2,6,11)] ##check matrix
X0<-mvrnorm(n,rep(0,p),Sigma)
X<-cbind(1,X0)
Y1<-diag(X%*%Omega1%*%t(X))+rnorm(n);
Y2<-diag(X%*%Omega2%*%t(X))+rnorm(n);
Y3<-diag(X%*%Omega3%*%t(X))+rnorm(n);
##
Y=Y1
Omega=Omega1
nalpha=50
runtime<-rep(0,7);
## type=1 (all-pairs LASSO)
runtime[1]=ttime({obj1=hiqr(X0,Y,type=1)})
## type=2 (Ridge regression)
runtime[2]=ttime({obj2=hiqr(X0,Y,type=2)})
## type=5 (Reduced Rank)
runtime[3]=ttime({obj5=hiqr(X0,Y,type=5)})
## type=12 (l1+l_inf)
runtime[4]=ttime({obj12=hiqr(X0,Y,type=12,nalpha=nalpha)})
## type=13 (l1+l2)
runtime[5]=ttime({obj13=hiqr(X0,Y,type=13,nalpha=nalpha)})
## type=14 (l1+l1/l_inf)
runtime[6]=ttime({obj14=hiqr(X0,Y,type=14,nalpha=nalpha)})
## type=15 (l1+nuclear norm)
runtime[7]=ttime({obj15=hiqr(X0,Y,type=15,nalpha=nalpha)})
runtime
tt=12
obj=paste('obj',tt,sep='')
tt=12
obj=paste('obj',tt,sep='')
mean(obj$niter)
eval(obj)
tt=12
obj=as.name(paste('obj',tt,sep=''))
obj
tt=12
obj=obj12
mean(obj$niter)
lambda1<-as.vector(obj$lambda1)
nlambda<-length(lambda1)
re<-rep(0,nlambda)
for (k in 1:nlambda)
{A=obj$Omega[[k]];
re[k]=csi(Omega,A)}
A1=matrix(re,ncol=nalpha,byrow=TRUE)
lambda<-exp(seq(from=0,to=log(0.25),length.out=50));
alpha<-seq(from=0.1,to=1,length.out=nalpha);
grid <- expand.grid(x=lambda, y=alpha)
grid$z <- re
pdf(paste(tt,'.pdf'))
levelplot(z ~ x * y, grid, xlab="lambda", ylab="alpha",col.regions = gray(100:0/100))
dev.off()
tt=13
obj=obj13
mean(obj$niter)
lambda1<-as.vector(obj$lambda1)
nlambda<-length(lambda1)
re<-rep(0,nlambda)
for (k in 1:nlambda)
{A=obj$Omega[[k]];
re[k]=csi(Omega,A)}
A1=matrix(re,ncol=nalpha,byrow=TRUE)
lambda<-exp(seq(from=0,to=log(0.25),length.out=50));
alpha<-seq(from=0.1,to=1,length.out=nalpha);
grid <- expand.grid(x=lambda, y=alpha)
grid$z <- re
pdf(paste(tt,'.pdf'))
levelplot(z ~ x * y, grid, xlab="lambda", ylab="alpha",col.regions = gray(100:0/100))
dev.off()
tt=14
obj=obj14
mean(obj$niter)
lambda1<-as.vector(obj$lambda1)
nlambda<-length(lambda1)
re<-rep(0,nlambda)
for (k in 1:nlambda)
{A=obj$Omega[[k]];
re[k]=csi(Omega,A)}
A1=matrix(re,ncol=nalpha,byrow=TRUE)
lambda<-exp(seq(from=0,to=log(0.25),length.out=50));
alpha<-seq(from=0.1,to=1,length.out=nalpha);
grid <- expand.grid(x=lambda, y=alpha)
grid$z <- re
pdf(paste(tt,'.pdf'))
levelplot(z ~ x * y, grid, xlab="lambda", ylab="alpha",col.regions = gray(100:0/100))
dev.off()
tt=15
obj=obj15
mean(obj$niter)
lambda1<-as.vector(obj$lambda1)
nlambda<-length(lambda1)
re<-rep(0,nlambda)
for (k in 1:nlambda)
{A=obj$Omega[[k]];
re[k]=csi(Omega,A)}
A1=matrix(re,ncol=nalpha,byrow=TRUE)
lambda<-exp(seq(from=0,to=log(0.25),length.out=50));
alpha<-seq(from=0.1,to=1,length.out=nalpha);
grid <- expand.grid(x=lambda, y=alpha)
grid$z <- re
pdf(paste(tt,'.pdf'))
levelplot(z ~ x * y, grid, xlab="lambda", ylab="alpha",col.regions = gray(100:0/100))
dev.off()
##simulation for all-pairs lasso
rm(list=ls())
library(HiQR)
setwd('~/Dropbox/Share/HQR_ADMM/test')
set.seed(99)
library('glmnet')
library('Matrix')
library('MASS')
library("lattice")
ttime<-function(obj)
{t1<-proc.time();
obj
t2<-as.vector(proc.time()-t1);
return(sum(t2[1:2]))}
n=500
## Generate data
p=100
## Parameters
Sigma=toeplitz(0.5^(0:(p-1)))
Omega3<-matrix(0,nrow=p+1,ncol=p+1)
Omega3[2,6]=3;Omega3[6,6]=-2.5;Omega3[6,11]=4
Omega3=(Omega3+t(Omega3))/2;
Omega2=Omega3;
Omega2[1,6]=-1;Omega2[6,1]=-1;
Omega1=Omega2;
Omega1[1,2]=1;Omega1[2,1]=1
Omega1[1,11]=1;Omega1[11,1]=1
Omega3[c(1,2,6,11),c(1,2,6,11)] ##check matrix
X0<-mvrnorm(n,rep(0,p),Sigma)
X<-cbind(1,X0)
Y1<-diag(X%*%Omega1%*%t(X))+rnorm(n);
Y2<-diag(X%*%Omega2%*%t(X))+rnorm(n);
Y3<-diag(X%*%Omega3%*%t(X))+rnorm(n);
##
mk=1
Y=Y1
Omega=Omega1
nalpha=50
runtime<-rep(0,7);
## type=1 (all-pairs LASSO)
runtime[1]=ttime({obj1=hiqr(X0,Y,type=1)})
## type=2 (Ridge regression)
runtime[2]=ttime({obj2=hiqr(X0,Y,type=2)})
## type=5 (Reduced Rank)
runtime[3]=ttime({obj5=hiqr(X0,Y,type=5)})
## type=12 (l1+l_inf)
runtime[4]=ttime({obj12=hiqr(X0,Y,type=12,nalpha=nalpha)})
## type=13 (l1+l2)
runtime[5]=ttime({obj13=hiqr(X0,Y,type=13,nalpha=nalpha)})
## type=14 (l1+l1/l_inf)
runtime[6]=ttime({obj14=hiqr(X0,Y,type=14,nalpha=nalpha)})
## type=15 (l1+nuclear norm)
runtime[7]=ttime({obj15=hiqr(X0,Y,type=15,nalpha=nalpha)})
runtime
ff<-function(obj,tt=12,kk=1){
mean(obj$niter)
lambda1<-as.vector(obj$lambda1)
nlambda<-length(lambda1)
re<-rep(0,nlambda)
for (k in 1:nlambda)
{A=obj$Omega[[k]];
re[k]=csi(Omega,A)}
A1=matrix(re,ncol=nalpha,byrow=TRUE)
lambda<-exp(seq(from=0,to=log(0.25),length.out=50));
alpha<-seq(from=0.1,to=1,length.out=nalpha);
grid <- expand.grid(x=lambda, y=alpha)
grid$z <- re
pdf(paste(kk,'-',tt,'.pdf',sep=''))
levelplot(z ~ x * y, grid, xlab="lambda", ylab="alpha",col.regions = gray(100:0/100))
dev.off()
}
ff(obj12,tt=12,kk=mk)
ff(obj13,tt=13,kk=mk)
ff(obj14,tt=14,kk=mk)
ff(obj15,tt=15,kk=mk)
# lambdafull<-rep(lambda,each=length(alpha));
# alphafull<-rep(alpha,times=length(lambda));
# lambda1_new=lambdafull*alphafull
# lam1=mean(lambda1/lambda1_new)*lambda
# obj0=hiqr(X0,Y,lambda =lam1,type=1)
#
# re0<-rep(0,50)
# for (k in 1:length(lam1))
# {B=obj0$Omega[[k]];
# re0[k]=csi(Omega,B)}
# round(t(re0),2)
# round(A1[,50],2)
obj=obj12
tt=12
kk=mk
mean(obj$niter)
lambda1<-as.vector(obj$lambda1)
nlambda<-length(lambda1)
re<-rep(0,nlambda)
for (k in 1:nlambda)
{A=obj$Omega[[k]];
re[k]=csi(Omega,A)}
A1=matrix(re,ncol=nalpha,byrow=TRUE)
lambda<-exp(seq(from=0,to=log(0.25),length.out=50));
alpha<-seq(from=0.1,to=1,length.out=nalpha);
grid <- expand.grid(x=lambda, y=alpha)
grid$z <- re
pdf(paste(kk,'-',tt,'.pdf',sep=''))
levelplot(z ~ x * y, grid, xlab="lambda", ylab="alpha",col.regions = gray(100:0/100))
dev.off()
ff(obj12,tt=12,kk=mk)
ff(obj13,tt=13,kk=mk)
lambda<-exp(seq(from=0,to=log(0.25),length.out=50));
alpha<-seq(from=0.1,to=1,length.out=nalpha);
nlambda<-length(lambda)*length(alpha)
lambda<-exp(seq(from=0,to=log(0.25),length.out=50));
alpha<-seq(from=0.1,to=1,length.out=nalpha);
nlambda<-length(lambda)*length(alpha)
re<-matrix(0,nrow=4,ncol=nlambda)
for (k in 1:nlambda)
{A1=obj12$Omega[[k]];
A2=obj13$Omega[[k]];
A3=obj14$Omega[[k]];
A4=obj15$Omega[[k]];
re[1,k]=csi(Omega,A1);
re[2,k]=csi(Omega,A2);
re[3,k]=csi(Omega,A3);
re[4,k]=csi(Omega,A4);
}
grid <- expand.grid(x=lambda, y=alpha)
grid$z <- re[1,]
pdf(paste(mk,'-','12.pdf'))
levelplot(z ~ x * y, grid, xlab="lambda", ylab="alpha",col.regions = gray(100:0/100))
dev.off()
grid$z <- re[1,]
pdf(paste(mk,'-','12.pdf',sep=''))
levelplot(z ~ x * y, grid, xlab="lambda", ylab="alpha",col.regions = gray(100:0/100))
dev.off()
grid$z <- re[2,]
pdf(paste(mk,'-','13.pdf',sep=''))
levelplot(z ~ x * y, grid, xlab="lambda", ylab="alpha",col.regions = gray(100:0/100))
library(HiQR)
